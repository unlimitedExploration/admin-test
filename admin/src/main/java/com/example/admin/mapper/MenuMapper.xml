<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.admin.mapper.MenuMapper">
    <resultMap id="BaseMenuMap" type="com.example.admin.bean.Menu">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="url" property="url" jdbcType="VARCHAR" />
        <result column="path" property="path" jdbcType="VARCHAR" />
        <result column="component" property="component" jdbcType="VARCHAR" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="iconCls" property="iconCls" jdbcType="VARCHAR" />
        <result column="parentId" property="parentId" jdbcType="INTEGER" />
        <result column="enabled" property="enabled" jdbcType="BIT" />
        <association property="meta" javaType="com.example.admin.bean.MenuMeta">
            <result column="keepAlive" property="keepAlive" jdbcType="BIT"/>
            <result column="requireAuth" property="requireAuth" jdbcType="BIT"/>
        </association>
    </resultMap>
    <resultMap id="Menus2" type="com.example.admin.bean.Menu" extends="BaseMenuMap">
        <collection property="children" ofType="com.example.admin.bean.Menu">
            <id column="id2" property="id" jdbcType="INTEGER" />
            <result column="url2" property="url" jdbcType="VARCHAR" />
            <result column="path2" property="path" jdbcType="VARCHAR" />
            <result column="component2" property="component" jdbcType="VARCHAR" />
            <result column="name2" property="name" jdbcType="VARCHAR" />
            <result column="iconCls2" property="iconCls" jdbcType="VARCHAR" />
            <result column="parentId2" property="parentId" jdbcType="INTEGER" />
            <result column="enabled2" property="enabled" jdbcType="BIT" />
            <association property="meta" javaType="com.example.admin.bean.MenuMeta">
                <result column="keepAlive2" property="keepAlive" jdbcType="BIT" />
                <result column="requireAuth2" property="requireAuth" jdbcType="BIT" />
            </association>
        </collection>
    </resultMap>
    <resultMap id="MenuWithRole" type="com.example.admin.bean.Menu" extends="BaseMenuMap">
        <collection property="roles" ofType="com.example.admin.bean.Role">
            <id column="rid" property="id"/>
            <result column="rname" property="name"/>
            <result column="rnamezh" property="namezh"/>
        </collection>
    </resultMap>
    <resultMap id="MenuWithChildren" type="com.example.admin.bean.Menu" extends="BaseMenuMap">
        <id column="id1" property="id"/>
        <result column="name1" property="name"/>
        <collection property="children" ofType="com.example.admin.bean.Menu">
            <id column="id2" property="id"/>
            <result column="name2" property="name"/>
            <collection property="children" ofType="com.example.admin.bean.Menu">
                <id column="id3" property="id"/>
                <result column="name3" property="name"/>
            </collection>
        </collection>
    </resultMap>

    <sql id="Base_Column_List" >
        id, url, path, component, name, iconCls, keepAlive, requireAuth, parentId, enabled
    </sql>
    <!--查询所有的菜单和关联的角色 -->
    <select id="getAllMenus" resultMap="MenuWithRole">
        select m.*,r.`id` as rid,r.`name` as rname,r.`namezh` as rnamezh from menu m,menu_role mr,role r where m.`id`=mr.`mid` and mr.`rid`=r.`id` order by m.`id`
    </select>
    <!-- 根据用户id查询用户的菜单信息 -->
    <select id="getMenusByUserId" parameterType="INTEGER" resultMap="Menus2">
        select DISTINCT m1.*,m2.`id` as id2,m2.`component` as component2,m2.`enabled` as enabled2,m2.`iconCls` as iconCls2,m2.`keepAlive` as keepAlive2,m2.`name` as name2,m2.`parentId` as parentId2,m2.`requireAuth` as requireAuth2,m2.`path` as path2
from menu m1,menu m2,user_role ur,menu_role mr
where m1.parentId is not null and m1.`id`=m2.`parentId` and ur.`uid`=#{uid} and ur.`rid`=mr.`rid` and mr.`mid`=m2.`id` and m2.`enabled`=true order by m1.`id`,m2.`id`;
    </select>
    <!-- 查询菜单上下级关系 -->
    <select id="menuTree" resultMap="MenuWithChildren">
        select m1.`id` as id1,m1.`name` as name1,m2.`id` as id2,m2.`name` as name2,m3.`id` as id3,m3.`name` as name3
from menu m1,menu m2,menu m3 where m1.`id`=m2.`parentId` and m2.`id`=m3.`parentId` and m3.`enabled`=true order by m1.`id`,m2.`id`,m3.`id`
    </select>
    <!-- 根据角色id查询菜单id -->
    <select id="getMenusByRid" resultType="INTEGER">
        SELECT mid from menu_role WHERE rid=#{rid}
    </select>
    <!-- 根据主键id查询菜单 -->
    <select id="selectByPrimaryKey" resultMap="BaseMenuMap" parameterType="java.lang.Integer">
        SELECT
        <include refid="Base_Column_List"/>
        FROM menu WHERE id = #{id,jdbcType=INTEGER}
    </select>
    <!-- 根据主键id删除菜单 -->
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
        delete from menu
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <!-- 根据id查询其子菜单 -->
    <select id="selectSubmenu" resultMap="BaseMenuMap" parameterType="java.lang.Integer">
        SELECT id,url,path,component,name,iconCls,parentId,enabled
        FROM menu WHERE parentId=#{mid}
    </select>

    <!-- 查询所有一级菜单及其子菜单 -->
    <select id="selectMenuWithChildren" resultMap="Menus2">
        select m1.id,m1.url,m1.path,m1.component,m1.name,m1.iconCls,m1.parentId,m1.enabled,
        m2.id as id2,m2.url as url2,m2.path as path2,m2.component as component2,m2.name as name2,m2.iconCls as iconCls2,
        m2.parentId as parentId2,m2.enabled as enabled2
        from menu m1 left join menu m2 on m1.id=m2.parentId
        having m1.parentId is not null and m1.parentId=1 order by m1.id,m2.id
        <if test="page != null and size != null">
            limit #{page},#{size}
        </if>
    </select>
    <!-- 查询所有一级菜单的数量 -->
    <select id="getTotal" resultType="java.lang.Long">
        SELECT count(*) FROM menu WHERE parentId=1
    </select>
    <insert id="insert" parameterType="com.example.admin.bean.Menu" >
        insert into menu (id, url, path,
        component, name, iconCls,
        keepAlive, requireAuth, parentId,
        enabled)
        values (#{id,jdbcType=INTEGER}, #{url,jdbcType=VARCHAR}, #{path,jdbcType=VARCHAR},
        #{component,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{iconcls,jdbcType=VARCHAR},
        #{keepalive,jdbcType=BIT}, #{requireauth,jdbcType=BIT}, #{parentid,jdbcType=INTEGER},
        #{enabled,jdbcType=BIT})
    </insert>
    <insert id="insertSelective" parameterType="com.example.admin.bean.Menu" >
        insert into menu
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="url != null" >
                url,
            </if>
            <if test="path != null" >
                path,
            </if>
            <if test="component != null" >
                component,
            </if>
            <if test="name != null" >
                name,
            </if>
            <if test="iconCls != null" >
                iconCls,
            </if>
            <if test="parentId != null" >
                parentId,
            </if>
            <if test="enabled != null" >
                enabled,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="url != null" >
                #{url,jdbcType=VARCHAR},
            </if>
            <if test="path != null" >
                #{path,jdbcType=VARCHAR},
            </if>
            <if test="component != null" >
                #{component,jdbcType=VARCHAR},
            </if>
            <if test="name != null" >
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="iconCls != null" >
                #{iconCls,jdbcType=VARCHAR},
            </if>
            <if test="parentId != null" >
                #{parentId,jdbcType=INTEGER},
            </if>
            <if test="enabled != null" >
                #{enabled,jdbcType=BIT},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.example.admin.bean.Menu" >
        update menu
        <set >
            <if test="url != null" >
                path = #{url,jdbcType=VARCHAR},
            </if>
            <if test="path != null" >
                path = #{path,jdbcType=VARCHAR},
            </if>
            <if test="component != null" >
                component = #{component,jdbcType=VARCHAR},
            </if>
            <if test="name != null" >
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="iconCls != null" >
                iconCls = #{iconCls,jdbcType=VARCHAR},
            </if>
            <if test="parentId != null" >
                parentId = #{parentId,jdbcType=INTEGER},
            </if>
            <if test="enabled != null" >
                enabled = #{enabled,jdbcType=BIT},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.example.admin.bean.Menu" >
        update menu
        set url = #{url,jdbcType=VARCHAR},
        path = #{path,jdbcType=VARCHAR},
        component = #{component,jdbcType=VARCHAR},
        name = #{name,jdbcType=VARCHAR},
        iconCls = #{iconcls,jdbcType=VARCHAR},
        keepAlive = #{keepalive,jdbcType=BIT},
        requireAuth = #{requireauth,jdbcType=BIT},
        parentId = #{parentid,jdbcType=INTEGER},
        enabled = #{enabled,jdbcType=BIT}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>